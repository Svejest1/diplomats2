/* assets/css/components/movie-list.css */

.movie-galaxy {
    /* Контейнер для "небесных тел" - фильмов */
    /* Стили будут сильно зависеть от реализации "Небесной Сферы" */
    /* Пока что простая сетка для демонстрации */
    display: grid; /* Меняем flex на grid */
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); /* Адаптивные колонки */
    /* flex-wrap: wrap;  Удаляем, не нужно для grid */
    justify-content: center; /* Это свойство не работает также как во flex, но можно оставить для общего случая, если элементов мало */
                               /* Для реального центрирования элементов в grid, если их меньше чем колонок, нужны другие подходы, 
                                  но auto-fill должен справляться с заполнением */
    align-items: stretch; /* Это значение по умолчанию, заставляет элементы в ряду иметь одинаковую высоту */
    gap: calc(var(--spacing-unit) * 2.5); 
    padding: calc(var(--spacing-unit) * 3);
    perspective: 1000px; /* Добавляем перспективу для 3D эффектов */
    min-height: 50vh;
    margin: 0 auto;
    max-width: var(--container-max-width, 1200px); /* Увеличиваем максимальную ширину контейнера */
}

.movie-card {
    background-color: var(--color-surface);
    border-radius: var(--border-radius-main);
    overflow: hidden;
    box-shadow: var(--box-shadow-soft);
    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
    cursor: pointer;
    border: 1px solid transparent; /* Для будущего ховер-эффекта с границей */
    position: relative; /* Для позиционирования внутренних элементов */
    /* max-width: 280px;  Уже не так критично, т.к. grid-template-columns управляет шириной */
    /* flex: 0 1 280px;  Удаляем, не нужно для grid-элемента */
    display: flex; /* Для управления внутренним расположением (постер сверху, инфо снизу) */
    flex-direction: column; /* Располагаем постер и инфо в колонку */
    justify-content: space-between; /* Распределяем пространство МЕЖДУ постером и инфо-блоком */
}

.movie-card:hover {
    transform: translateY(-5px) scale(1.03);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5), 0 0 15px var(--color-primary-accent);
    border-color: var(--color-primary-accent);
}

.movie-card__poster {
    width: 100%;
    height: 320px; /* Уменьшаем высоту постера */
    object-fit: cover; /* Масштабирует изображение, сохраняя пропорции и обрезая лишнее */
    display: block;
}

.movie-card__info {
    padding: calc(var(--spacing-unit) * 1.5); /* Уменьшаем паддинг */
    display: flex;
    flex-direction: column;
    /* flex-grow: 1;  Убираем, чтобы блок не растягивался излишне */
}

.movie-card__title {
    font-size: calc(var(--h3-size) * 0.9); /* Немного уменьшаем шрифт заголовка */
    font-weight: bold;
    color: var(--color-text-primary);
    margin-bottom: calc(var(--spacing-unit) * 0.75); /* Уменьшаем отступ */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; /* Добавляем многоточие, если название не помещается */
}

.movie-card__genre {
    font-size: calc(var(--p-size) * 0.85); /* Немного уменьшаем шрифт */
    color: var(--color-text-secondary);
    margin-bottom: calc(var(--spacing-unit) * 1); /* Уменьшаем отступ */
}

.movie-card__details {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: calc(var(--p-size) * 0.85);
    color: var(--color-text-secondary);
}

.movie-card__rating {
    display: flex;
    align-items: center;
    font-weight: bold;
    color: var(--color-secondary-accent);
}

.movie-card__rating svg {
    width: 1em; /* Размер иконки относительно шрифта */
    height: 1em;
    fill: currentColor;
    margin-right: calc(var(--spacing-unit) * 0.5);
}

.movie-card__year {
    /* Стили для года выпуска */
}

/* Стили для .movie-release и .btn-details, которые есть в movies.js */
.movie-card .movie-release {
    font-size: calc(var(--p-size) * 0.8);
    color: var(--color-text-secondary);
    margin-bottom: calc(var(--spacing-unit) * 1);
}

.movie-card .btn-details {
    display: inline-block;
    background-color: var(--color-primary-accent);
    color: var(--color-text-primary);
    padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 1.5);
    border-radius: var(--border-radius-small);
    text-align: center;
    text-decoration: none;
    font-size: calc(var(--p-size) * 0.9);
    font-weight: 500;
    margin-top: calc(var(--spacing-unit) * 1.5); /* Заменяем auto на фиксированный отступ от текста */
    transition: background-color var(--transition-speed) ease, transform var(--transition-speed) ease;
}

.movie-card .btn-details:hover {
    background-color: rgba(var(--color-primary-accent-rgb), 0.85);
    transform: translateY(-1px);
}

/* "Кинетический" стиль для карточки фильма - теперь это .movie-planet */
.movie-planet {
    width: 180px; /* Уменьшаем размер карточки */
    height: 270px; /* Уменьшаем высоту карточки */
    border-radius: var(--border-radius-main);
    background-size: cover;
    background-position: center;
    position: relative;
    box-shadow: 
        0 0 15px 5px rgba(var(--color-secondary-accent-rgb), 0.2),
        0 0 25px 0px rgba(var(--color-primary-accent-rgb), 0.3),
        inset 0 0 10px rgba(var(--color-surface-rgb), 0.5);
    transition: transform 0.5s cubic-bezier(0.25, 1, 0.5, 1), 
                box-shadow 0.5s ease;
    overflow: hidden;
    cursor: pointer;
    transform-style: preserve-3d;
    border: 1px solid rgba(var(--color-secondary-accent-rgb), 0.1);
    margin: 0 auto;
}

.movie-planet:hover {
    transform: translateY(-8px) scale(1.05) rotateY(5deg);
    box-shadow: 
        0 0 25px 10px rgba(var(--color-secondary-accent-rgb), 0.35), 
        0 0 40px 5px rgba(var(--color-primary-accent-rgb), 0.45),
        inset 0 0 5px rgba(var(--color-surface-rgb), 0.3);
    border-color: rgba(var(--color-secondary-accent-rgb), 0.3);
}

.movie-planet__overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, 
        rgba(var(--color-surface-rgb, 26, 26, 46), 0.95) 30%, 
        rgba(var(--color-surface-rgb, 26, 26, 46), 0.7) 60%, 
        transparent 100%);
    padding: calc(var(--spacing-unit) * 2);
    padding-top: calc(var(--spacing-unit) * 4); /* Больше места сверху для градиента */
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.4s ease-out, transform 0.4s ease-out;
    text-align: center;
    color: var(--color-text-primary);
}

.movie-planet:hover .movie-planet__overlay {
    opacity: 1;
    transform: translateY(0);
}

.movie-planet__title {
    font-size: calc(var(--h3-size) * 0.85);
    font-weight: bold;
    color: var(--color-text-primary);
    margin-bottom: calc(var(--spacing-unit) * 0.5);
    line-height: 1.3;
    padding: 0 calc(var(--spacing-unit) * 0.5);
    text-align: center;
}

.movie-planet__genre {
    font-size: calc(var(--p-size) * 0.8);
    color: var(--color-text-secondary);
    margin-bottom: calc(var(--spacing-unit) * 0.8);
    text-align: center;
}

.movie-planet__rating {
    font-size: calc(var(--p-size) * 0.85);
    color: var(--color-secondary-accent);
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
}

.movie-planet__rating svg {
    width: 1em;
    height: 1em;
    fill: currentColor;
    margin-right: calc(var(--spacing-unit) * 0.5);
}

/* Добавим переменные для RGB компонент основных цветов, если они понадобятся в rgba() */
/* Это лучше делать в :root в style.css, но для примера пока здесь */
/* 
:root {
    --color-primary-accent-rgb: 224, 26, 122;
    --color-secondary-accent-rgb: 0, 245, 212;
    --color-surface-rgb: 26, 26, 46;
}
*/

/* Анимация дрейфа */
@keyframes drift {
    0%,
    100% {
        transform: translate(0, 0) rotate(0);
    }
    25% {
        transform: translate(var(--drift-x-max), var(--drift-y-max)) rotate(var(--drift-rotate-max));
    }
    50% {
        transform: translate(calc(var(--drift-x-max) * -0.5), calc(var(--drift-y-max) * -0.8)) rotate(calc(var(--drift-rotate-max) * -0.5));
    }
    75% {
        transform: translate(calc(var(--drift-x-max) * 0.8), calc(var(--drift-y-max) * -0.2)) rotate(calc(var(--drift-rotate-max) * 0.7));
    }
}

.drifting-planet {
    /* Применяем анимацию, но только если JS не управляет transform из-за мыши */
    /* Этот подход может потребовать доработки, чтобы JS и CSS анимации не конфликтовали */
    /* JS-анимация параллакса будет перезаписывать transform, так что дрейф будет виден только в состоянии покоя мыши */
    animation: drift var(--drift-duration) var(--drift-delay) infinite ease-in-out alternate;
}

/* Важно! Если JS будет постоянно обновлять transform для параллакса,
   эта CSS-анимация дрейфа может не работать или работать прерывисто.
   Возможно, дрейф тоже стоит реализовать через JS requestAnimationFrame для лучшего контроля,
   либо убедиться, что JS сбрасывает transform так, чтобы CSS мог его подхватить.
   В текущей реализации JS сбрасывает transform в mouseleave, что даст шанс CSS анимации.
*/

@media (max-width: 768px) {
    .seat-selection-page {
        /* Если есть специфичные отступы для этой страницы, отличающиеся от .main-content */
        /* padding-left: var(--spacing-unit); */
        /* padding-right: var(--spacing-unit); */
    }

    .page-title-container h2,
    .page-title-container p {
        text-align: center; /* Централизуем заголовок и информацию о сеансе */
        margin-left: auto;
        margin-right: auto;
    }

    .seat-selector-container {
        /* Возможно, этот блок тоже потребует изменений, особенно #seat-map */
        /* Например, #seat-map может потребовать overflow-x: auto; */
        /* display: flex; flex-direction: column; align-items: center; */ /* Если нужно перестроить его внутренние компоненты */
    }

    .seat-map {
        /* Уменьшаем масштаб или делаем прокручиваемым, если не влезает */
        /* transform: scale(0.8); */ /* Пример: немного уменьшить масштаб */
        /* transform-origin: top center; */
        /* overflow-x: auto; */ /* Позволит горизонтально скроллить, если места не влезают */
        /* margin-bottom: var(--spacing-unit); */ /* Добавить отступ снизу перед легендой */
        /* width: 100%; */ /* чтобы overflow работал корректно */
    }
    
    /* Если места становятся слишком маленькими или их много, можно попробовать уменьшить их размер */
    .seat {
        /* width: 20px; */ /* Пример */
        /* height: 20px; */ /* Пример */
        /* font-size: 10px; */ /* Если на местах есть текст/номера */
    }
    .seat-legend {
        flex-wrap: wrap; /* Позволит элементам легенды переноситься */
        justify-content: center;
        margin-bottom: calc(var(--spacing-unit) * 2);
    }
    .legend-item {
        margin-bottom: var(--spacing-unit); /* Добавить отступ, если переносятся */
    }


    .booking-summary {
        width: 100%; /* Занимает всю доступную ширину */
        max-width: 100%; /* Убедимся, что не превышает ширину родителя */
        margin-left: 0;
        margin-right: 0;
        padding: calc(var(--spacing-unit) * 2); /* Можно скорректировать внутренние отступы */
        box-sizing: border-box; /* Чтобы padding не увеличивал общую ширину */
    }

    .booking-summary h3 {
        text-align: center; /* Централизуем заголовок в панели */
    }

    .total-price {
        text-align: center; /* Можно и цену центрировать или оставить справа */
        margin-top: var(--spacing-unit);
        margin-bottom: calc(var(--spacing-unit) * 2);
    }

    #proceed-to-checkout-btn {
        width: 100%; /* Кнопка на всю ширину панели */
        padding: calc(var(--spacing-unit) * 1.5) 0; /* Можно настроить отступы кнопки */
        font-size: var(--p-size);
    }

    .movie-galaxy {
        padding: calc(var(--spacing-unit) * 2);
    }
    
    .movie-planet {
        width: 150px;
        height: 225px;
    }
}

@media (max-width: 480px) {
    /* Дополнительные корректировки для очень маленьких экранов */
    .seat-map {
        /* transform: scale(0.7); */
        /* Либо более агрессивные изменения в размере мест */
    }
    .booking-summary {
        padding: var(--spacing-unit);
    }
     .page-title-container h2 {
        font-size: calc(var(--h2-size) * 0.9); /* Немного уменьшить шрифт заголовка */
    }
    .page-title-container p {
        font-size: calc(var(--p-size) * 0.9);
    }

    .movie-planet {
        width: 130px;
        height: 195px;
    }
} 